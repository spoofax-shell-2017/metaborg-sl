module trans/semantics/repl

imports
  trans/semantics/values
  trans/semantics/semantics

signature
  sorts
    ShellInit

  constructors
    ShellInit : ShellInit
    ClosV: String * List(String) * Stmt * E -> V

  arrows
    ShellInit -init-> ShellInit
    Program -shell-> V
    Shell -shell-> U
    FunDef -shell-> V
    Stmt -shell-> U
    Expr -shell-> V
  
rules

  ShellInit() -init-> ShellInit() :: E {}, GE {}

  ProgramDesug(fdefs, e) :: E, GE -shell-> v :: E', GE'
  where
    fdefs :: E, GE -load-> _ :: E1, GE1;
    e :: E1, GE1 --> v :: E', GE'

  StmtBlock(Block(ss)) :: E, GE -shell-> u :: E', GE'
  where
    ss :: E, GE --> u :: E', GE'

  FunDef(name, params, body) :: E, GE -shell-> clos :: E', GE'
  where
    ClosV(name, params, body, E) => clos;
	  { name |--> clos } => entry;
	  { entry, E } => E';
	  { entry, GE } => GE'

  s : Stmt :: E, GE -shell-> u :: E', GE'
  where
    s :: E, GE --> u :: E', GE'

  e : Expr :: E, GE -shell-> v :: E', GE'
  where
    e :: E, GE --> v :: E', GE'

  FunCall(name, args) --> v
  where
    lookup(name) --> ClosV(_, params, body, E);
    args --> vargs;
    invoke(vargs, params, body) :: E --> v
